#!/usr/bin/env python
#-*- coding:utf-8 -*-


import os
import psycopg2
from datetime import datetime, timedelta



PG_DATABASE = 'postgres'
PG_USER = 'postgres'
PG_PWD = 'postgres'
PG_HOST = 'localhost'
PG_PORT = 5432



CURRENT_FILE = os.path.realpath(__file__)
CURRENT_DIR = os.path.dirname(CURRENT_FILE)

TABLE_PATTERN = 'christine.calendar_{CALENDAR_NAME}'

DML_HEADER = '\n'.join([
    '-- {DML_FILE}',
    '-- WARNING: THIS FILE IS AUTOMATICALLY GENERATED AT : {GEN_DATE}',
    ''])



CALENDAR_BEGIN = datetime.strptime('1900-01-01', '%Y-%m-%d')
CALENDAR_END = datetime.strptime('2092-09-28', '%Y-%m-%d')


class Calendar:

    calendar = None
    columns_list = ['isodate', 'year', 'month', 'day']
    debug = True
    pgconn = psycopg2.connect(
                database=PG_DATABASE,
                user=PG_USER,
                password=PG_PWD,
                host=PG_HOST,
                port=PG_PORT)

    DML_CMD_INSERT = '\n'.join([
        'TRUNCATE {TABLE_NAME};',
        'INSERT INTO {TABLE_NAME} ({COLUMNS_LIST})',
        'VALUES {VALUES_TUPLE}',
        ';'])


    def __init__(self):

        assert self.calendar
        assert self.columns_list

        self.calendar_name = self.__class__.__name__.lower()
        self.table_name = TABLE_PATTERN.format(CALENDAR_NAME=self.calendar_name)
        self.dml_file = '{}_dml.sql'.format(self.calendar_name)
        self.dml_path = os.path.join(CURRENT_DIR, self.dml_file)
        self.dml_header = DML_HEADER.format(DML_FILE=self.dml_file, GEN_DATE=datetime.utcnow())


    @staticmethod
    def _generate_date(s=CALENDAR_BEGIN, e=CALENDAR_END):
        while True:
            yield s.year, s.month, s.day
            s += timedelta(days=1)
            if s > e:
                break


    def insert(self):
        todml = ''
        values_tuple = []
        for d in self._generate_date():
            isoyear, isomonth, isoday = d
            isodate = '{:04d}-{:02d}-{:02d}'.format(isoyear, isomonth, isoday)
            year, month, day = self.calendar.from_gregorian(isoyear, isomonth, isoday)
            str_tuple = "('{isodate}',\t{year},\t{month},\t{day})"
            str_tuple = str_tuple.format(
                isodate=isodate,
                year=year,
                month=month,
                day=day)

            values_tuple.append(str_tuple)

        cmd_insert = self.DML_CMD_INSERT.format(
            TABLE_NAME = self.table_name,
            COLUMNS_LIST = ','.join(self.columns_list),
            VALUES_TUPLE = '\n, '.join(values_tuple))

        todml += self.dml_header
        todml += cmd_insert

        if self.debug:
            print 'DEBUG mode'
            print 'writting to {}...'.format(self.dml_path),
            with open(self.dml_path, 'w') as f:
                f.write(todml)
        else:
            print 'Inserting to {}...'.format(self.table_name)
            with self.pgconn.cursor() as cur:
                cur.execute(todml)
            self.pgconn.commit()

        print 'OK.'
